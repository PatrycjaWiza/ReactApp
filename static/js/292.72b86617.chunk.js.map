{"version":3,"file":"static/js/292.72b86617.chunk.js","mappings":"qOAGaA,EAAW,SAAC,GAAkB,IAAhBC,EAAe,EAAfA,SACnBC,EAAe,CACnBC,MAAO,GACPC,SAAU,GACVC,MAAO,GACPC,MAAO,GACPC,WAAW,GAEb,GAA0BC,EAAAA,EAAAA,UAASN,GAAnC,eAAOO,EAAP,KAAcC,EAAd,KACA,GAAoCF,EAAAA,EAAAA,UAAS,CAAC,GAA9C,eAAOG,EAAP,KAAmBC,EAAnB,KAEQT,EAA6CM,EAA7CN,MAAOC,EAAsCK,EAAtCL,SAAUC,EAA4BI,EAA5BJ,MAAOC,EAAqBG,EAArBH,MAChC,GADqDG,EAAdF,WACPC,EAAAA,EAAAA,WAAS,IAAzC,eAAOK,EAAP,KAAiBC,EAAjB,KACMC,EAAe,SAAAC,GACnB,MAAwBA,EAAEC,OAAlBC,EAAR,EAAQA,KAAMC,EAAd,EAAcA,MACdT,GAAS,SAAAU,GAAI,yBACRA,GADQ,cAEVF,EAAOC,GAFG,GAId,EAYKE,EAAW,SAAAC,GACf,IAAMC,EAAS,CAAC,EAYhB,OATKD,EAAOjB,OADV,4EAC0BmB,KAAKF,EAAOjB,SACtCkB,EAAOlB,MAAQ,6CAEZiB,EAAOhB,OAASgB,EAAOhB,MAAMmB,OAAS,KACzCF,EAAOjB,MAAQ,sCAEQ,IAArBgB,EAAOf,YACTgB,EAAOhB,UAAY,kCAEdgB,CACR,EAQD,OAPAG,EAAAA,EAAAA,YAAU,WAC+B,IAAnCC,OAAOC,KAAKjB,GAAYc,QAAgBZ,IAC1CZ,EAASQ,GAnBXC,EAASR,GAuBV,GAAE,CAACS,KAEF,kBAAMV,SA/Ba,SAAAe,GACnBA,EAAEa,iBACFjB,EAAcS,EAASZ,IACvBK,GAAY,EACb,EA2BC,WACE,qDACA,iBAAKgB,UAAU,mBAAf,WACE,uCACA,kBAAOX,MAAOhB,EAAO4B,SAAUhB,EAAcG,KAAK,QAAQc,KAAK,aAEjE,iBAAKF,UAAU,aAAf,WACE,4CACA,kBACEX,MAAOf,EACP2B,SAAUhB,EACVG,KAAK,WACLc,KAAK,iBAGT,iBAAKF,UAAU,aAAf,WACE,wCACA,kBACEX,MAAOd,EACP0B,SAAUhB,EACVG,KAAK,QACLY,UAAWnB,EAAWN,OAAS,UAC/B2B,KAAK,WAEP,iBAAMF,UAAU,QAAhB,SAAyBnB,EAAWN,YAEtC,iBAAKyB,UAAU,aAAf,WACE,gDACA,kBACEX,MAAOb,EACPyB,SAAUhB,EACVG,KAAK,QACLY,UAAWnB,EAAWL,OAAS,UAC/B0B,KAAK,WAEP,iBAAMF,UAAU,QAAhB,SAAyBnB,EAAWL,YAEtC,gBAAKwB,UAAU,aAAf,UACE,mBAAOA,UAAU,WAAjB,WACE,kBACEE,KAAK,WACLC,GAAG,YACHf,KAAK,YACLa,SA7Ea,SAAAf,GACrBN,GAAS,kBAAKD,GAAN,IAAaF,UAAWS,EAAEC,OAAOiB,UAC1C,EA4ESJ,UAAWnB,EAAWJ,WAAa,aAErC,iBAAMuB,UAAU,cARlB,4BAUE,iBAAMA,UAAU,mBAAhB,SAAoCnB,EAAWJ,kBAGnD,mBAAQyB,KAAK,SAAb,sBAGL,C","sources":["components/register/Register.js"],"sourcesContent":["import PropTypes from 'prop-types';\nimport { useEffect, useState } from 'react';\n\nexport const Register = ({ onSubmit }) => {\n  const initialState = {\n    login: '',\n    password: '',\n    email: '',\n    phone: '',\n    agreement: false,\n  };\n  const [state, setState] = useState(initialState);\n  const [formErrors, setFormErrors] = useState({});\n  // eslint-disable-next-line no-unused-vars\n  const { login, password, email, phone, agreement } = state;\n  const [isSubmit, setIsSubmit] = useState(false);\n  const handleChange = e => {\n    const { name, value } = e.target;\n    setState(prev => ({\n      ...prev,\n      [name]: value,\n    }));\n  };\n  const handleCheckbox = e => {\n    setState({ ...state, agreement: e.target.checked });\n  };\n  const handleSubmit = e => {\n    e.preventDefault();\n    setFormErrors(validate(state));\n    setIsSubmit(true);\n  };\n  const resetForm = () => {\n    setState(initialState);\n  };\n  const validate = values => {\n    const errors = {};\n    const regex =\n      /^[a-zA-Z0-9.!#$%&’*+/=?^_`{|}~-]+@[a-zA-Z0-9-]+(?:\\.[a-zA-Z0-9-]+)*$/;\n    if (!values.email || !regex.test(values.email)) {\n      errors.email = 'Nieprawidłowy format adresu e-mail';\n    }\n    if (!values.phone || values.phone.length < 9) {\n      errors.phone = 'Nieprawidłowy numer telefonu';\n    }\n    if (values.agreement === false) {\n      errors.agreement = 'Wymagana akceptacja regulaminu';\n    }\n    return errors;\n  };\n  useEffect(() => {\n    if (Object.keys(formErrors).length === 0 && isSubmit) {\n      onSubmit(state);\n      resetForm();\n    }\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [formErrors]);\n  return (\n    <form onSubmit={handleSubmit}>\n      <h2>FORMULARZ REJESTRACYJNY</h2>\n      <div className=\"form-group label\">\n        <label>Login:</label>\n        <input value={login} onChange={handleChange} name=\"login\" type=\"text\" />\n      </div>\n      <div className=\"form-group\">\n        <label>Hasło:</label>\n        <input\n          value={password}\n          onChange={handleChange}\n          name=\"password\"\n          type=\"password\"\n        />\n      </div>\n      <div className=\"form-group\">\n        <label>E-mail:</label>\n        <input\n          value={email}\n          onChange={handleChange}\n          name=\"email\"\n          className={formErrors.email && 'invalid'}\n          type=\"email\"\n        />\n        <span className=\"error\">{formErrors.email}</span>\n      </div>\n      <div className=\"form-group\">\n        <label>Numer telefonu:</label>\n        <input\n          value={phone}\n          onChange={handleChange}\n          name=\"phone\"\n          className={formErrors.phone && 'invalid'}\n          type=\"phone\"\n        />\n        <span className=\"error\">{formErrors.phone}</span>\n      </div>\n      <div className=\"form-group\">\n        <label className=\"checkbox\">\n          <input\n            type=\"checkbox\"\n            id=\"agreement\"\n            name=\"agreement\"\n            onChange={handleCheckbox}\n            className={formErrors.agreement && 'invalid'}\n          />\n          <span className=\"checkmark\"></span>\n          Akceptuję Regulamin\n          <span className=\"agreement--error\">{formErrors.agreement}</span>\n        </label>\n      </div>\n      <button type=\"submit\">zapisz</button>\n    </form>\n  );\n};\n\nRegister.propTypes = {\n  onSubmit: PropTypes.func,\n};\n"],"names":["Register","onSubmit","initialState","login","password","email","phone","agreement","useState","state","setState","formErrors","setFormErrors","isSubmit","setIsSubmit","handleChange","e","target","name","value","prev","validate","values","errors","test","length","useEffect","Object","keys","preventDefault","className","onChange","type","id","checked"],"sourceRoot":""}